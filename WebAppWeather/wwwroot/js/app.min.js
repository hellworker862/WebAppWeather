/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./static/src/js/pages lazy recursive ^\\.\\/.*\\.js$":
/*!************************************************************************!*\
  !*** ./static/src/js/pages/ lazy ^\.\/.*\.js$ strict namespace object ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./home.js\": [\n\t\t\"./static/src/js/pages/home.js\",\n\t\t\"static_src_js_pages_home_js\"\n\t],\n\t\"./weather.js\": [\n\t\t\"./static/src/js/pages/weather.js\",\n\t\t\"static_src_js_pages_weather_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./static/src/js/pages lazy recursive ^\\\\.\\\\/.*\\\\.js$\";\nmodule.exports = webpackAsyncContext;\n\n//# sourceURL=webpack://asp.net/./static/src/js/pages/_lazy_^\\.\\/.*\\.js$_strict_namespace_object?");

/***/ }),

/***/ "./static/src/js/app.js":
/*!******************************!*\
  !*** ./static/src/js/app.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_popups_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/popups.js */ \"./static/src/js/modules/popups.js\");\n\r\nvar preloader = document.querySelector('#preloader');\r\n\r\nclass App {\r\n    #page = null\r\n  \r\n    constructor(container, page) {\r\n      this.$container = container\r\n      this.#page = page\r\n  \r\n      this.$nav = document.querySelector('.nav-link')\r\n  \r\n      this.route = this.route.bind(this)\r\n      // привязываем метод отображения поста\r\n      // данный метод будет вызываться при клике по посту\r\n      this.showWeather = this.showWeather.bind(this)\r\n  \r\n      this.#initApp(this.#page)\r\n    }\r\n  \r\n    #initApp({ url }) {\r\n      history.replaceState({ page: `${url}` }, `${url} page`, url)\r\n  \r\n      this.#render(this.#page)\r\n  \r\n      this.$nav.addEventListener('click', this.route)\r\n  \r\n      window.addEventListener('popstate', async ({ state }) => {\r\n        // получаем адрес предыдущей страницы\r\n        const { page } = state\r\n  \r\n        // если адрес содержит post\r\n        if (page.includes('post')) {\r\n          // извлекаем идентификатор\r\n          const id = page.replace('post#', '')\r\n          // присваиваем текущей странице объект найденного поста\r\n          this.#page = await findPost(id)\r\n        } else {\r\n          // иначе, получаем модуль поста\r\n          const newPage = await __webpack_require__(\"./static/src/js/pages lazy recursive ^\\\\.\\\\/.*\\\\.js$\")(`./${state.page}.js`)\r\n          // присваиваем текущей странице объект предыдущей страницы\r\n          this.#page = newPage.default\r\n        }\r\n  \r\n        this.#savePage(this.#page);\r\n        this.#render(this.#page)\r\n      })\r\n    }\r\n  \r\n    async #render({ content }) {\r\n      unload();\r\n      this.$container.innerHTML =\r\n        // проверяем, является ли контент строкой,\r\n        // т.е. является он статическим или динамическим\r\n        typeof content === 'string' ? content : await content()\r\n        \r\n      load()\r\n      // после рендеринга регистрируем обработчик клика по посту на контейнере\r\n      this.$container.addEventListener('click', this.showPost)\r\n    }\r\n  \r\n    async route({ target }) {\r\n      if (target.tagName !== 'A') return\r\n\r\n      const { url } = target.dataset\r\n      if (this.#page.url === url) return\r\n  \r\n      const newPage = await __webpack_require__(\"./static/src/js/pages lazy recursive ^\\\\.\\\\/.*\\\\.js$\")(`./${url}.js`)\r\n      console.log(newPage)\r\n      this.#page = newPage.default\r\n  \r\n      preloader.classList.remove('preloader-hide');\r\n      this.#render(this.#page)\r\n  \r\n      this.#savePage(this.#page)\r\n    }\r\n  \r\n    // метод отображения поста\r\n    async showWeather({ target }) {\r\n      // нас интересуте только клик по посту\r\n      // помните эту строку в стилях: div > article > * { pointer-events: none; } ?\r\n      // это позволяет сделать так, чтобы элементы, вложенные в article,\r\n      // не были кликабельными, т.е. не являлись e.target\r\n      if (target.tagName !== 'ARTICLE') return\r\n  \r\n      // присваиваем текущей странице объект найденного поста\r\n      this.#page = await findPost(target.id)\r\n  \r\n      this.#render(this.#page)\r\n  \r\n      this.#savePage(this.#page)\r\n    }\r\n  \r\n    #savePage({ url }) {\r\n      history.pushState({ page: `${url}` }, `${url} page`, url)\r\n  \r\n      localStorage.setItem('pageName', JSON.stringify(url))\r\n    }\r\n  };\r\n  \r\n  (async () => {\r\n    const container = document.querySelector('main')\r\n  \r\n    const pageName = JSON.parse(localStorage.getItem('pageName')) ?? 'home'\r\n  \r\n    let pageToRender = ''\r\n  \r\n    // содержит ли название страницы слово \"post\" и т.д.\r\n    // см. обработку popstate\r\n    if (pageName.includes('post')) {\r\n      const id = pageName.replace('post#', '')\r\n  \r\n      pageToRender = await findPost(id)\r\n    } else {\r\n      const pageModule = await __webpack_require__(\"./static/src/js/pages lazy recursive ^\\\\.\\\\/.*\\\\.js$\")(`./${pageName}.js`)\r\n  \r\n      pageToRender = pageModule.default\r\n    }\r\n    new App(container, pageToRender)\r\n  })()\r\n\r\nfunction load(){\r\n  preloader.classList.add('preloader-hide');\r\n  setTimeout(function() {\r\n    preloader.style.display='none'\r\n  }, 595)\r\n}\r\n\r\nfunction unload() {\r\n  preloader.classList.remove('preloader-hide');\r\n  preloader.style.display='block'\r\n}\n\n//# sourceURL=webpack://asp.net/./static/src/js/app.js?");

/***/ }),

/***/ "./static/src/js/modules/popups.js":
/*!*****************************************!*\
  !*** ./static/src/js/modules/popups.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst popupLinks = document.querySelectorAll('.popup-link');\r\nconst body = document.querySelector('body');\r\nconst main = document.querySelector('main');\r\nconst footer = document.querySelector('footer');\r\nconst lockPadding = document.querySelectorAll(\".lock-padding\");\r\n\r\nlet unlock = true;\r\n\r\nconst timeout = 800;\r\n\r\nif(popupLinks.length > 0) {\r\n    for(let index = 0; index < popupLinks.length; index++) {\r\n        const popupLink = popupLinks[index];\r\n        popupLink.addEventListener(\"click\", function (e) {\r\n            const popupName = popupLink.getAttribute('href').replace('#','');\r\n            const curentPopup = document.getElementById(popupName);\r\n            curentPopup.addEventListener(\"click\", function (e) {\r\n                if(!e.target.closest('.popup-content')) {\r\n                    popupClose(e.target.closest('.popup'));\r\n                }\r\n            });\r\n            popupOpen(curentPopup);\r\n            e.preventDefault();\r\n        });\r\n    }\r\n}\r\n\r\nconst popupCloseIcon = document.querySelectorAll('.close-popup');\r\nif(popupCloseIcon.length > 0) {\r\n    for(let index = 0; index < popupCloseIcon.length; index++){\r\n        const el = popupCloseIcon[index];\r\n        el.addEventListener('click', function(e) {\r\n            popupClose(el.closest('.popup'));\r\n            e.preventDefault();\r\n        });\r\n    }\r\n}\r\n\r\nfunction popupOpen(curentPopup) {\r\n    if(curentPopup && unlock) {\r\n        const popupActive = document.querySelector('.popup.open-popup');\r\n        if(popupActive){\r\n            popupClose(popupActive, false);\r\n        } else {\r\n            bodyLock();\r\n        }\r\n        curentPopup.classList.add('open-popup');\r\n    }\r\n}\r\n\r\nfunction popupClose(popupActive, doUnlock = true) {\r\n    if(unlock) {\r\n        popupActive.classList.remove('open-popup');\r\n        if(doUnlock){\r\n            bodyUnLock();\r\n        }\r\n    }\r\n}\r\n\r\nfunction bodyLock() {\r\n    const lockPaddingValue = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';\r\n    for(let index = 0; index < lockPadding.length; index++){\r\n        const el =  lockPadding[index];\r\n        el.style.paddingRight = lockPaddingValue;\r\n    }\r\n    main.style.paddingRight = lockPaddingValue;\r\n    footer.style.paddingRight = lockPaddingValue;\r\n    body.classList.add('lock');\r\n\r\n    unlock = false;\r\n    setTimeout(function() {\r\n        unlock = true;\r\n    }, timeout);\r\n}\r\n\r\nfunction bodyUnLock() {\r\n    setTimeout( function () {\r\n        for (let index = 0; index < lockPadding.length; index++){\r\n            const el = lockPadding[index];\r\n            el.style.paddingRight = '0px';\r\n        }\r\n        main.style.paddingRight = '0px';\r\n        footer.style.paddingRight = '0px';\r\n        body.classList.remove('lock');\r\n    }, timeout);\r\n\r\n    unlock = false;\r\n    setTimeout(function () {\r\n        unlock = true;\r\n    }, timeout);\r\n}\r\n\r\ndocument.addEventListener('keydown', function(e) {\r\n    if(e.which === 27){\r\n        const popupActive = document.querySelector('.popup.open-popup');\r\n        popupClose(popupActive);\r\n    }\r\n});\n\n//# sourceURL=webpack://asp.net/./static/src/js/modules/popups.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".app.min.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "asp.net:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkasp_net"] = self["webpackChunkasp_net"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./static/src/js/app.js");
/******/ 	
/******/ })()
;