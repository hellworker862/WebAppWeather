// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppWeather;

#nullable disable

namespace WebAppWeather.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220930102400_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("WebAppWeather.Models.Places.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnName")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Lat")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Lon")
                        .HasColumnType("TEXT");

                    b.Property<int>("RegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RuName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 524894,
                            EnName = "Moscow",
                            Lat = 55.76166500m,
                            Lon = 37.60666700m,
                            RegionId = 1,
                            RuName = "Москва"
                        },
                        new
                        {
                            Id = 498817,
                            EnName = "Saint Petersburg",
                            Lat = 59.89444400m,
                            Lon = 30.26416800m,
                            RegionId = 2,
                            RuName = "Санкт-Петербруг"
                        },
                        new
                        {
                            Id = 1486209,
                            EnName = "Yekaterinburg",
                            Lat = 56.85749800m,
                            Lon = 60.61249900m,
                            RegionId = 3,
                            RuName = "Екатеринбург"
                        },
                        new
                        {
                            Id = 2013348,
                            EnName = "Vladivostok",
                            Lat = 43.10562100m,
                            Lon = 131.87353500m,
                            RegionId = 4,
                            RuName = "Владивосток"
                        },
                        new
                        {
                            Id = 1496747,
                            EnName = "Novosibirsk",
                            Lat = 55.04111100m,
                            Lon = 82.93444100m,
                            RegionId = 5,
                            RuName = "Новосибирск"
                        });
                });

            modelBuilder.Entity("WebAppWeather.Models.Places.Country", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RuName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = "RU",
                            EnName = "Russia",
                            RuName = "Россия"
                        });
                });

            modelBuilder.Entity("WebAppWeather.Models.Places.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EnName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RuName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = "RU",
                            EnName = "Moscow Oblast",
                            RuName = "Московская область"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = "RU",
                            EnName = "Leninskaya Oblast",
                            RuName = "Ленинградская область"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = "RU",
                            EnName = "Sverdlovsk Oblast",
                            RuName = "Свердловская область"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = "RU",
                            EnName = "Primorsky Krai",
                            RuName = "Приморский край"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = "RU",
                            EnName = "Novosibirskaya Oblast",
                            RuName = "Новосибирская область"
                        });
                });

            modelBuilder.Entity("WebAppWeather.Models.Places.Region", b =>
                {
                    b.HasOne("WebAppWeather.Models.Places.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
